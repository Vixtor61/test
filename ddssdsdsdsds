[33mcommit 73f44461b7f20f4ab61e8e513ea73b201a6a9097[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Vixtor61 <00198117@uca.edu.sv>
Date:   Mon Nov 19 06:04:35 2018 -0600

    asd

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..d1bed12[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,61 @@[m
[32m+[m[32m# Logs[m
[32m+[m[32mlogs[m
[32m+[m[32m*.log[m
[32m+[m[32mnpm-debug.log*[m
[32m+[m[32myarn-debug.log*[m
[32m+[m[32myarn-error.log*[m
[32m+[m
[32m+[m[32m# Runtime data[m
[32m+[m[32mpids[m
[32m+[m[32m*.pid[m
[32m+[m[32m*.seed[m
[32m+[m[32m*.pid.lock[m
[32m+[m
[32m+[m[32m# Directory for instrumented libs generated by jscoverage/JSCover[m
[32m+[m[32mlib-cov[m
[32m+[m
[32m+[m[32m# Coverage directory used by tools like istanbul[m
[32m+[m[32mcoverage[m
[32m+[m
[32m+[m[32m# nyc test coverage[m
[32m+[m[32m.nyc_output[m
[32m+[m
[32m+[m[32m# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)[m
[32m+[m[32m.grunt[m
[32m+[m
[32m+[m[32m# Bower dependency directory (https://bower.io/)[m
[32m+[m[32mbower_components[m
[32m+[m
[32m+[m[32m# node-waf configuration[m
[32m+[m[32m.lock-wscript[m
[32m+[m
[32m+[m[32m# Compiled binary addons (https://nodejs.org/api/addons.html)[m
[32m+[m[32mbuild/Release[m
[32m+[m
[32m+[m[32m# Dependency directories[m
[32m+[m[32mnode_modules/[m
[32m+[m[32mjspm_packages/[m
[32m+[m
[32m+[m[32m# Typescript v1 declaration files[m
[32m+[m[32mtypings/[m
[32m+[m
[32m+[m[32m# Optional npm cache directory[m
[32m+[m[32m.npm[m
[32m+[m
[32m+[m[32m# Optional eslint cache[m
[32m+[m[32m.eslintcache[m
[32m+[m
[32m+[m[32m# Optional REPL history[m
[32m+[m[32m.node_repl_history[m
[32m+[m
[32m+[m[32m# Output of 'npm pack'[m
[32m+[m[32m*.tgz[m
[32m+[m
[32m+[m[32m# Yarn Integrity file[m
[32m+[m[32m.yarn-integrity[m
[32m+[m
[32m+[m[32m# dotenv environment variables file[m
[32m+[m[32m.env[m
[32m+[m
[32m+[m[32m# next.js build output[m
[32m+[m[32m.next[m
[1mdiff --git a/app.js b/app.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b44d794[m
[1m--- /dev/null[m
[1m+++ b/app.js[m
[36m@@ -0,0 +1,107 @@[m
[32m+[m[32mvar createError = require('http-errors');[m
[32m+[m[32mvar express = require('express');[m
[32m+[m[32mvar path = require('path');[m
[32m+[m[32mvar cookieParser = require('cookie-parser');[m
[32m+[m[32mvar logger = require('morgan');[m
[32m+[m
[32m+[m[32mvar indexRouter = require('./routes/index');[m
[32m+[m[32mvar usersRouter = require('./routes/users');[m
[32m+[m
[32m+[m[32mvar app = express();[m
[32m+[m
[32m+[m[32m// view engine setup[m
[32m+[m[32mapp.set('views', path.join(__dirname, 'views'));[m
[32m+[m[32mapp.set('view engine', 'jade');[m
[32m+[m
[32m+[m[32mapp.use(logger('dev'));[m
[32m+[m[32mapp.use(express.json());[m
[32m+[m[32mapp.use(express.urlencoded({ extended: false }));[m
[32m+[m[32mapp.use(cookieParser());[m
[32m+[m[32mapp.use(express.static(path.join(__dirname, 'public')));[m
[32m+[m
[32m+[m[32mapp.use('/', indexRouter);[m
[32m+[m[32mapp.use('/users', usersRouter);[m
[32m+[m
[32m+[m[32m// catch 404 and forward to error handler[m
[32m+[m[32mapp.use(function(req, res, next) {[m
[32m+[m[32m  next(createError(404));[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// error handler[m
[32m+[m[32mapp.use(function(err, req, res, next) {[m
[32m+[m[32m  // set locals, only providing error in development[m
[32m+[m[32m  res.locals.message = err.message;[m
[32m+[m[32m  res.locals.error = req.app.get('env') === 'development' ? err : {};[m
[32m+[m
[32m+[m[32m  // render the error page[m
[32m+[m[32m  res.status(err.status || 500);[m
[32m+[m[32m  res.render('error');[m
[32m+[m[32m});[m
[32m+[m[32m //requerimos las siguientes librerias[m
[32m+[m[32m var createError = require('http-errors');[m
[32m+[m[32m var express = require('express');[m
[32m+[m[32m var path = require('path');[m
[32m+[m[32m var cookieParser = require('cookie-parser');[m
[32m+[m[32m var logger = require('morgan');[m
[32m+[m[32m /*librerias que hemos instalado*/[m
[32m+[m[32m //Para el manejo de sesiones.[m
[32m+[m[32m const session = require('express-session');[m
[32m+[m[32m //Almacenar la sesion en nuestra base de datos[m
[32m+[m[32m const MongoStore = require('connect-mongo')(session);[m
[32m+[m[32m //Credenciales de nuestra base de datos[m
[32m+[m[32m const {mongodb}=require('./configs/keys');[m
[32m+[m
[32m+[m[32m var indexRouter = require('./routes/index');[m
[32m+[m[32m var usersRouter = require('./routes/users');[m
[32m+[m
[32m+[m[32m var app = express();[m
[32m+[m[32m /*Conexion con mongodb*/[m
[32m+[m[32m require('./configs/database');[m
[32m+[m[32m  // view engine setup[m
[32m+[m[32m  app.set('views', path.join(__dirname, 'views'));[m
[32m+[m[32m  app.set('view engine', 'jade');[m
[32m+[m
[32m+[m[32m  //middlewares[m
[32m+[m[32m  //configuraciÃ³n de la sesion.[m
[32m+[m[32m  app.use(session({[m
[32m+[m[32m  secret:"Hello World!!!",[m
[32m+[m[32m  resave: true, // para alamcenar el objeto session[m
[32m+[m[32m  saveUninitialized: true, // inicializar si el objeto esta vacio[m
[32m+[m[32m  //para almacenar la sesion en la base de datos[m
[32m+[m[32m  store: new MongoStore({[m
[32m+[m[32m      url: mongodb.URI,[m
[32m+[m[32m      autoReconnect: true[m
[32m+[m[32m  })[m
[32m+[m[32m  }));[m
[32m+[m
[32m+[m[32m  app.use(logger('dev'));[m
[32m+[m[32m  app.use(express.json());[m
[32m+[m[32m  app.use(express.urlencoded({ extended: false }));[m
[32m+[m[32m  app.use(cookieParser());[m
[32m+[m[32m  app.use(express.static(path.join(__dirname, 'public')));[m
[32m+[m[32m  /*Agremos la sesion a las variables locales de la app*/[m
[32m+[m
[32m+[m[32m  app.use((req,res,next)=>{[m
[32m+[m[32m    app.locals.session = req.session;[m
[32m+[m[32m    next();[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    //routes[m
[32m+[m[32m    app.use('/', indexRouter); // ruta para el index[m
[32m+[m[32m    app.use('/users', usersRouter); // rutas para los usuarios[m
[32m+[m
[32m+[m[32m    // catch 404 and forward to error handler[m
[32m+[m[32m    app.use(function(req, res, next) {[m
[32m+[m[32m    next(createError(404));[m
[32m+[m[32m    });[m
[32m+[m[32m // error handler[m
[32m+[m[32m app.use(function(err, req, res, next) {[m
[32m+[m[32m  // set locals, only providing error in development[m
[32m+[m[32m  res.locals.message = err.message;[m
[32m+[m[32m  res.locals.error = req.app.get('env') === 'development' ? err : {};[m
[32m+[m
[32m+[m[32m  // render the error page[m
[32m+[m[32m  res.status(err.status || 500);[m
[32m+[m[32m  res.render('error');[m
[32m+[m[32m  });[m[41m    [m
[32m+[m[32mmodule.exports = app;[m
[1mdiff --git a/bin/www b/bin/www[m
[1mnew file mode 100755[m
[1mindex 0000000..3be1a7d[m
[1m--- /dev/null[m
[1m+++ b/bin/www[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32m#!/usr/bin/env node[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Module dependencies.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mvar app = require('../app');[m
[32m+[m[32mvar debug = require('debug')('login:server');[m
[32m+[m[32mvar http = require('http');[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Get port from environment and store in Express.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mvar port = normalizePort(process.env.PORT || '3001');[m
[32m+[m[32mapp.set('port', port);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Create HTTP server.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mvar server = http.createServer(app);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Listen on provided port, on all network interfaces.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mserver.listen(port);[m
[32m+[m[32mserver.on('error', onError);[m
[32m+[m[32mserver.on('listening', onListening);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Normalize a port into a number, string, or false.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mfunction normalizePort(val) {[m
[32m+[m[32m  var port = parseInt(val, 10);[m
[32m+[m
[32m+[m[32m  if (isNaN(port)) {[m
[32m+[m[32m    // named pipe[m
[32m+[m[32m    return val;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (port >= 0) {[m
[32m+[m[32m    // port number[m
[32m+[m[32m    return port;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return false;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Event listener for HTTP server "error" event.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mfunction onError(error) {[m
[32m+[m[32m  if (error.syscall !== 'listen') {[m
[32m+[m[32m    throw error;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  var bind = typeof port === 'string'[m
[32m+[m[32m    ? 'Pipe ' + port[m
[32m+[m[32m    : 'Port ' + port;[m
[32m+[m
[32m+[m[32m  // handle specific listen errors with friendly messages[m
[32m+[m[32m  switch (error.code) {[m
[32m+[m[32m    case 'EACCES':[m
[32m+[m[32m      console.error(bind + ' requires elevated privileges');[m
[32m+[m[32m      process.exit(1);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 'EADDRINUSE':[m
[32m+[m[32m      console.error(bind + ' is already in use');[m
[32m+[m[32m      process.exit(1);[m
[32m+[m[32m      break;[m
[32m+[m[32m    default:[m
[32m+[m[32m      throw error;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Event listener for HTTP server "listening" event.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mfunction onListening() {[m
[32m+[m[32m  var addr = server.address();[m
[32m+[m[32m  var bind = typeof addr === 'string'[m
[32m+[m[32m    ? 'pipe ' + addr[m
[32m+[m[32m    : 'port ' + addr.port;[m
[32m+[m[32m  debug('Listening on ' + bind);[m
[32m+[m[32m}[m
[1mdiff --git a/configs/database.js b/configs/database.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ec2e22e[m
[1m--- /dev/null[m
[1m+++ b/configs/database.js[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mconst moongose = require('mongoose'); //requerimos la libreria moongose[m
[32m+[m[32mconst {mongodb} = require('./keys'); //requerimos el archivo de nuestras crendenciales[m
[32m+[m[32m//el mÃ©todo connect recibe como parametros la URI de[m
[32m+[m[32m//conexiÃ³n.[m
[32m+[m[32mmoongose.connect(mongodb.URI,{[m[41m [m
[32m+[m[32m    useNewUrlParser: true,[m
[32m+[m[32m    useCreateIndex: true[m
[32m+[m[32m})[m
[32m+[m[32m.then(db=>console.log('Connection success!!'))[m
[32m+[m[32m.catch(err=>console.error(err));[m
\ No newline at end of file[m
[1mdiff --git a/configs/keys.js b/configs/keys.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4a774d1[m
[1m--- /dev/null[m
[1m+++ b/configs/keys.js[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m    mongodb:[m
[32m+[m[32m    {[m
[32m+[m[32m        URI: 'mongodb://localhost:27017/ucacloud'[m[41m [m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/controllers/UserController.js b/controllers/UserController.js[m
[1mnew file mode 100644[m
[1mindex 0000000..216b185[m
[1m--- /dev/null[m
[1m+++ b/controllers/UserController.js[m
[36m@@ -0,0 +1,99 @@[m
[32m+[m
[32m+[m[32mconst mongoose = require('mongoose'); //libreria para el manejo a la conexion de bases de datos[m
[32m+[m[32mconst User = require("../models/users"); //modelo usuarios.[m
[32m+[m[32mconst AuthController = {}; // objeto que tendra la logica de nuestra web[m
[32m+[m[32mconst bcrypt = require('bcrypt'); //libreria para encriptar[m
[32m+[m
[32m+[m[32m /*nos devuelve la vista signin que es para ingresar al sistema */[m
[32m+[m[32m AuthController.login = function (req, res, next) {[m
[32m+[m[32m    res.render('signin'); //[m
[32m+[m[32m}[m
[32m+[m[32mAuthController.create = function (req, res, next) {[m
[32m+[m[32m    res.render('signup')[m
[32m+[m[32m}[m
[32m+[m[32mAuthController.store = async function (req, res) {[m
[32m+[m[32m    //obteniendo los datos del usuario[m
[32m+[m[32m    let user = {[m
[32m+[m[32m        email: req.body.email,[m
[32m+[m[32m        password: req.body.password,[m
[32m+[m[32m        name: req.body.name,[m
[32m+[m[32m        lastname: req.body.lastname[m
[32m+[m[32m    }[m
[32m+[m[32m    /*alamcenando el usuario*/[m
[32m+[m[32m    await User.create(user, (error, user) => {[m[41m [m
[32m+[m[32m        if (error) // si se produce algun error[m
[32m+[m[32m            //Devolvemos una vista con los mensajes de error[m
[32m+[m[32m            return res.render('signup', { err: error, email: user.email });[m
[32m+[m[32m        else {[m
[32m+[m[32m            //Almacenamos los datos de la consulta en el objeto data[m
[32m+[m[32m            let data = {[m
[32m+[m[32m                userId: user._id.toString(),[m
[32m+[m[32m                email: user.email,[m
[32m+[m[32m                password: user.password,[m
[32m+[m[32m                name: user.name,[m
[32m+[m[32m                lastname: user.lastname[m
[32m+[m[32m            }[m
[32m+[m[32m            //hash es el mÃ© que nos permite encriptar el password[m
[32m+[m[32m            //con 10 le indicamos cuantas veces realizara la encriptaciÃ³n[m
[32m+[m[32m            bcrypt.hash(data.userId, 10, function (err, hash) {[m
[32m+[m[32m                if (err) { //si produce un error[m
[32m+[m[32m                    next(err); // retornaremos el error[m
[32m+[m[32m                }[m
[32m+[m[41m                [m
[32m+[m[32m                data.userId = hash; // almacenamos la password encriptada[m
[32m+[m[32m                //parseamos el objeto json a cadena y lo alamcenamos en la variable session[m
[32m+[m[32m                req.session.user = JSON.stringify(data);[m
[32m+[m[32m                console.log(req.session.user);[m
[32m+[m[32m                //nos dirigira a la pagina donde se encuentra el perfil del usuario[m
[32m+[m[32m                return res.redirect('/users/profile');[m
[32m+[m[32m            });[m
[32m+[m[32m        }[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m};[m[41m    [m
[32m+[m[32m/*nos dirigira al perfil */[m
[32m+[m[32mAuthController.profile = function (req, res) {[m
[32m+[m[32m    return res.render('profile');[m
[32m+[m[32m}[m
[32m+[m[32m/*Para ingresar al sistema*/[m
[32m+[m[32mAuthController.signin = function (req, res,next) {[m
[32m+[m[32m    var data = {};[m
[32m+[m[32m    //user autentication es el metodo que nos permitira ingresar al sistema[m
[32m+[m[32m    User.authenticate(req.body.email, req.body.password, (error, user) => {[m
[32m+[m[32m        if (error || !user) {[m
[32m+[m[32m            res.render('signin', { err: error, email: req.body.email });[m
[32m+[m[32m            //return res.send("Ddd");[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m                data.userId= user._id.toString(),[m
[32m+[m[32m                data.email= user.email,[m
[32m+[m[32m                data.password=user.password[m
[32m+[m[41m            [m
[32m+[m[32m            //este mÃ©todo nos encriptara el userId para que sea alamcenado en la sesion[m
[32m+[m[32m            bcrypt.hash(data.userId, 10, function (err, hash) {[m
[32m+[m[32m                if (err) {[m
[32m+[m[32m                    next(err);[m
[32m+[m[32m                }[m
[32m+[m[32m                data.userId = hash;[m
[32m+[m[32m                //parseamos el objeto a cadena[m
[32m+[m[32m                req.session.user = JSON.stringify(data);[m
[32m+[m[32m                //si es correcto nos dirigira al perfil del usuario que esta ingresando.[m
[32m+[m[32m                return res.redirect('/users/profile');[m
[32m+[m[32m            });[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m[32m    });[m
[32m+[m[32m};[m[41m [m
[32m+[m[32mAuthController.logout = function (req, res, next) {[m
[32m+[m[32m    if (req.session) { //si la session existe[m
[32m+[m[32m        req.session.destroy(function (err) { // destruimos la sesion[m
[32m+[m[32m            if (err) { // si produce un error[m
[32m+[m[32m                next(err);[m
[32m+[m[32m            }[m
[32m+[m[32m            else { //si la sesion se destruyo nos dirigira al index[m
[32m+[m[32m                res.redirect('/');[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mmodule.exports = AuthController;[m
\ No newline at end of file[m
[1mdiff --git a/middlewares/AuthMiddleware.js b/middlewares/AuthMiddleware.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2d41845[m
[1m--- /dev/null[m
[1m+++ b/middlewares/AuthMiddleware.js[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mconst mongoose = require('mongoose');[m
[32m+[m[32mconst User = require("../models/users");[m
[32m+[m[32mconst bcrypt = require('bcrypt');[m
[32m+[m
[32m+[m[32mconst AuthMiddleware = {};[m
[32m+[m[32mAuthMiddleware.isAuthentication = function (req, res, next) {[m
[32m+[m[32m    if(!req.session.user) // verificamos is existe la session[m
[32m+[m[32m    {[m
[32m+[m[32m        return res.redirect('/'); //redirigimos al index si esto no es posible[m
[32m+[m[32m    }[m
[32m+[m[32m    //si existe la sesion parsea el contenido[m
[32m+[m[32m    data = JSON.parse(req.session.user);[m
[32m+[m[32m    User.findOne({ email: data.email })[m
[32m+[m[32m        .exec(function (err, user) {[m
[32m+[m[32m            if (err) {[m
[32m+[m[32m                return next(err);[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                if (!user) {[m
[32m+[m[32m                    return res.redirect('/');[m
[32m+[m[32m                }[m
[32m+[m[32m                else {[m
[32m+[m[32m                    bcrypt.compare(data.userId, user._id.toString(), function (err, result) {[m
[32m+[m[32m                        console.log("llego aca", data.userId);[m
[32m+[m[32m                        if (result == true) {[m
[32m+[m[32m                            return next();[m
[32m+[m[32m                        }[m
[32m+[m[32m                        else {[m
[32m+[m[32m                            return next(err);[m
[32m+[m[32m                        }[m
[32m+[m[32m                    });[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mmodule.exports = AuthMiddleware;[m
[1mdiff --git a/models/users.js b/models/users.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a314629[m
[1m--- /dev/null[m
[1m+++ b/models/users.js[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m
[32m+[m[32mconst mongoose = require('mongoose'); //Para manipular conexiÃ³n y el manejo de la base de datos[m
[32m+[m[32mconst bcrypt = require('bcrypt'); // Para encriptar contraseÃ±as[m
[32m+[m[32mconst { Schema } = mongoose; //Objeto Schema para realizar diferentes operaciones[m
[32m+[m
[32m+[m[32mconst UserSchema = new Schema({[m
[32m+[m[32m    //atributos con sus validaciones[m
[32m+[m[32m    email: {type:String, required:true, unique:true},[m[41m [m
[32m+[m[32m    password: {type:String, required:true},[m
[32m+[m[32m    name: {type:String, required:true},[m
[32m+[m[32m    lastname: {type:String, required:true}[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mUserSchema.statics.authenticate = function (email, password, callback) {[m
[32m+[m[32m    User.findOne({ email: email })[m
[32m+[m[32m        .exec(function (err, user) {[m
[32m+[m[32m            if (err) {[m
[32m+[m[32m                return callback(err)[m
[32m+[m[32m            } else if (!user) {[m
[32m+[m[32m                var err = new Error('User not found.');[m
[32m+[m[32m                err.status = 401;[m
[32m+[m[32m                return callback(err);[m
[32m+[m[32m            }[m
[32m+[m[32m                bcrypt.compare(password, user.password, function (err, result) {[m
[32m+[m[32m                    if (result === true) {[m
[32m+[m[32m                        return callback(null, user);[m
[32m+[m[32m                    } else {[m
[32m+[m[32m                        return callback(new Error('User or Password are wrong'));[m
[32m+[m[32m                    }[m
[32m+[m[32m                })[m
[32m+[m[32m            });[m
[32m+[m[32m    }[m[41m                            [m
[32m+[m
[32m+[m[32mUserSchema.pre('save', function (next) {[m
[32m+[m[32m    var user = this;[m
[32m+[m[32m    bcrypt.hash(user.password, 10, function (err, hash) {[m
[32m+[m[32m        if (err) {[m
[32m+[m[32m        return next(err);[m
[32m+[m[32m        }[m
[32m+[m[32m        user.password = hash;[m
[32m+[m[32m        next();[m
[32m+[m[32m    })[m
[32m+[m[32m    });[m
[32m+[m[32mlet User = mongoose.model('users', UserSchema);[m
[32m+[m[32mmodule.exports = User;[m
[32m+[m[41m  [m
\ No newline at end of file[m
[1mdiff --git a/package.json b/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..1261b42[m
[1m--- /dev/null[m
[1m+++ b/package.json[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "login",[m
[32m+[m[32m  "version": "0.0.0",[m
[32m+[m[32m  "private": true,[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "start": "node ./bin/www"[m
[32m+[m[32m  },[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "cookie-parser": "~1.4.3",[m
[32m+[m[32m    "debug": "~2.6.9",[m
[32m+[m[32m    "express": "~4.16.0",[m
[32m+[m[32m    "http-errors": "~1.6.2",[m
[32m+[m[32m    "jade": "~1.11.0",[m
[32m+[m[32m    "morgan": "~1.9.0"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/public/stylesheets/style.css b/public/stylesheets/style.css[m
[1mnew file mode 100644[m
[1mindex 0000000..e6d0266[m
[1m--- /dev/null[m
[1m+++ b/public/stylesheets/style.css[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mbody {[m
[32m+[m[32m  padding: 0;[m
[32m+[m[32m  font: 14px "Lucida Grande", Helvetica, Arial, sans-serif;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32ma {[m
[32m+[m[32m  color: #00B7FF;[m
[32m+[m[32m}[m
[1mdiff --git a/routes/index.js b/routes/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ecca96a[m
[1m--- /dev/null[m
[1m+++ b/routes/index.js[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mvar express = require('express');[m
[32m+[m[32mvar router = express.Router();[m
[32m+[m
[32m+[m[32m/* GET home page. */[m
[32m+[m[32mrouter.get('/', function(req, res, next) {[m
[32m+[m[32m  res.render('index', { title: 'Express' });[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mmodule.exports = router;[m
[1mdiff --git a/routes/users.js b/routes/users.js[m
[1mnew file mode 100644[m
[1mindex 0000000..438b505[m
[1m--- /dev/null[m
[1m+++ b/routes/users.js[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mconst express = require('express');[m
[32m+[m[32mconst router = express.Router();[m
[32m+[m[32m//Requerimos el controlador que hemos creado[m
[32m+[m[32mconst AuthController =require("../controllers/UserController");[m
[32m+[m[32m//Requerimos el Middelware que hemos creado[m
[32m+[m[32mconst AuthMiddleware = require("../middlewares/AuthMiddleware")[m
[32m+[m[32m//Requerimos el modelo[m
[32m+[m[32mconst User = require("../models/users");[m
[32m+[m[32m//ruta que nos devolvera el formulario para crear usuarios[m
[32m+[m[32mrouter.get('/signup',AuthController.create);[m
[32m+[m[32m//ruta que enviara los datos del usuario para almacenarlos en la base de datos[m
[32m+[m[32mrouter.post('/signup',AuthController.store);[m
[32m+[m[32m//ruta que nos devolvera el formulario para ingresar[m
[32m+[m[32mrouter.get('/signin',AuthController.login);[m
[32m+[m[32m//ruta que enviara los datos del usuario para ingresar al sistema[m
[32m+[m[32mrouter.post('/signin',AuthController.signin);[m
[32m+[m[32m//ruta para salir del sistema[m
[32m+[m[32mrouter.get('/logout',AuthController.logout);[m
[32m+[m[32m/*Middlewar que verifica que solo los usuarios registrados podran ingresar a esta seccion */[m
[32m+[m[32mrouter.use(AuthMiddleware.isAuthentication);[m
[32m+[m[32m//ruta para acceder al perifl[m
[32m+[m[32mrouter.get('/profile',AuthController.profile);[m
[32m+[m[32mmodule.exports = router;[m
[1mdiff --git a/views/error.jade b/views/error.jade[m
[1mnew file mode 100644[m
[1mindex 0000000..51ec12c[m
[1m--- /dev/null[m
[1m+++ b/views/error.jade[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mextends layout[m
[32m+[m
[32m+[m[32mblock content[m
[32m+[m[32m  h1= message[m
[32m+[m[32m  h2= error.status[m
[32m+[m[32m  pre #{error.stack}[m
[1mdiff --git a/views/index.jade b/views/index.jade[m
[1mnew file mode 100644[m
[1mindex 0000000..ecc1a8d[m
[1m--- /dev/null[m
[1m+++ b/views/index.jade[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m
[32m+[m[32mif !session.user[m
[32m+[m[32m    extends layout[m
[32m+[m
[32m+[m[32m    block content[m
[32m+[m[32m    h1= title[m
[32m+[m[32m    p Welcome to #{title}[m
\ No newline at end of file[m
[1mdiff --git a/views/layout.jade b/views/layout.jade[m
[1mnew file mode 100644[m
[1mindex 0000000..608b098[m
[1m--- /dev/null[m
[1m+++ b/views/layout.jade[m
[36m@@ -0,0 +1,74 @@[m
[32m+[m[32mdoctype html[m
[32m+[m[32mhtml(lang='en')[m
[32m+[m[32m  head[m
[32m+[m[32m    meta(charset='UTF-8')[m
[32m+[m[32m    meta(name='viewport', content='width=, initial-scale=1.0')[m
[32m+[m[32m    meta(http-equiv='X-UA-Compatible', content='ie=edge')[m
[32m+[m[32m    link(rel='stylesheet', href='/stylesheets/style.css')[m
[32m+[m[32m    link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css', integrity='sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO', crossorigin='anonymous')[m
[32m+[m[32m    script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js', integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo', crossorigin='anonymous')[m
[32m+[m[32m    script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js', integrity='sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49', crossorigin='anonymous')[m
[32m+[m[32m    script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js', integrity='sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy', crossorigin='anonymous')[m
[32m+[m[32m    link(rel='stylesheet', href='https://use.fontawesome.com/releases/v5.4.2/css/all.css', integrity='sha384-/rXc/GQVaYpyDdyxK+ecHPVYJSN9bmVFBvjA/9eOB+pb3F2w2N6fc5qB9Ew5yIns', crossorigin='anonymous')[m
[32m+[m[32m    title UCACloud[m
[32m+[m[32m  body[m
[32m+[m[32m    .BarraSup[m
[32m+[m[32m      .navbar.navbar-dark.bg-dark[m
[32m+[m[32m        h2 UCACloud[m
[32m+[m[32m        form.d-flex.justify-content-end(action='/users/signin', method='post')[m
[32m+[m[32m          input#email.form-control.mr-sm-2(type='email', name='email', placeholder='abgh@correo.com', pattern='^[^@]+@[^@]+\.[a-zA-Z]{2,}$', required='')[m
[32m+[m[32m          input#password.form-control.mr-sm-2(type='password', name='password', placeholder='password', required='')[m
[32m+[m[32m          input#inicio.btn.btn-outline-light(type='submit', value='Enviar')[m
[32m+[m[32m    .content[m
[32m+[m[32m      .contIzqpractica[m
[32m+[m[32m        .CITextpractica[m
[32m+[m[32m          | Lorem ipsum dpracticaolor sit amet, consectetur adipisicing elit, sed[m
[32m+[m[32m          | do eiusmod tepracticampor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,[m
[32m+[m[32m          | quis nostrud practicaexercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.[m
[32m+[m[32m          | Duis aute irupracticare dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat[m
[32m+[m[32m          | nulla pariatupracticar. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia[m
[32m+[m[32m          | deserunt mollit anim id est laborum.[m
[32m+[m[32m        .CIImage[m
[32m+[m[32m          img(src='./src/Logo UCA 2015.png', width='50%')[m
[32m+[m[32m      .contDer[m
[32m+[m[32m        form.registro(action='/users/signup', method='post')[m
[32m+[m[32m          input#name.form-control.mr-sm-2(type='text', name='name', placeholder='Nombre', required='')[m
[32m+[m[32m          input#lastname.form-control.mr-sm-2(type='text', name='lastname', placeholder='Apellido', required='')[m
[32m+[m[32m          input#email.form-control.mr-sm-2(type='email', name='email', placeholder='abgh@correo.com', pattern='^[^@]+@[^@]+\.[a-zA-Z]{2,}$', required='')[m
[32m+[m[32m          input#password.form-control.mr-sm-2(type='password', name='password', placeholder='Password', required='')[m
[32m+[m[32m          input#cpass.form-control.mr-sm-2(type='password', name='cpass', placeholder='Confirmar Password', required='')[m
[32m+[m[32m          input#reg.btn.btn-outline-dark(type='submit', name='enviar', value='Register')[m
[32m+[m[32m    hr[m
[32m+[m[32m    footer[m
[32m+[m[32m      .card[m
[32m+[m[32m        .card-header[m
[32m+[m[32m          | UCACloud[m
[32m+[m[32m        .card-body[m
[32m+[m[32m          h5.card-title Redes Sociales[m
[32m+[m[32m          ul.card-text[m
[32m+[m[32m            li[m
[32m+[m[32m              | Enlaces Externos[m
[32m+[m[32m              ul[m
[32m+[m[32m                li[m
[32m+[m[32m                  i.fab.fa-github[m
[32m+[m[32m                li[m
[32m+[m[32m                  i.fas.fa-home[m
[32m+[m[32m                li[m
[32m+[m[32m                  i.fab.fa-facebook-f[m
[32m+[m[32m            li Mas sobre nosotros[m
[32m+[m[32m          .d-flex.justify-content-center[m
[32m+[m[32m            .card(style='width: 18rem;')[m
[32m+[m[32m              .card-body[m
[32m+[m[32m                h5.card-title Special title treatment[m
[32m+[m[32m                p.card-text With supporting text below as a natural lead-in to additional content.[m
[32m+[m[32m                a.btn.btn-primary(href='#') Go somewhere[m
[32m+[m[32m            .card(style='width: 18rem;')[m
[32m+[m[32m              .card-body[m
[32m+[m[32m                h5.card-title Special title treatment[m
[32m+[m[32m                p.card-text With supporting text below as a natural lead-in to additional content.[m
[32m+[m[32m                a.btn.btn-primary(href='#') Go somewhere[m
[32m+[m[32m            .card(style='width: 18rem;')[m
[32m+[m[32m              .card-body[m
[32m+[m[32m                h5.card-title Special title treatment[m
[32m+[m[32m                p.card-text With supporting text below as a natural lead-in to additional content.[m
[32m+[m[32ma.btn.btn-primary(href='#') Go somewhere[m
\ No newline at end of file[m
[1mdiff --git a/views/profile.jade b/views/profile.jade[m
[1mnew file mode 100644[m
[1mindex 0000000..3f38284[m
[1m--- /dev/null[m
[1m+++ b/views/profile.jade[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mh1 profile[m
[32m+[m[32mul[m
[32m+[m[32m    li[m
[32m+[m[32m        a(href="/") Inicio[m
[32m+[m[32m    li[m
[32m+[m[32m        a(href="/users/logout") salir[m
[32m+[m[32mp EMail : #{JSON.parse(session.user).email}[m
[32m+[m[32mp Password : #{JSON.parse(session.user).password}[m[41m                [m
\ No newline at end of file[m
[1mdiff --git a/views/signin.jade b/views/signin.jade[m
[1mnew file mode 100644[m
[1mindex 0000000..54ca78b[m
[1m--- /dev/null[m
[1m+++ b/views/signin.jade[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mh1 Signin[m
[32m+[m[32m    a(href="/") Inicio[m
[32m+[m[32m    div= err[m
[32m+[m[32m    form(method='POST' action='/users/signin')[m
[32m+[m[32m        div[m
[32m+[m[32m            input(type='email',placeholder='Ingrese su correo' name='email' required value=email?email:'')[m
[32m+[m[32m        br[m
[32m+[m[32m        div[m
[32m+[m[32m            input(type='password', placeholder='*********' name='password')[m
[32m+[m[32m        br[m
[32m+[m[32m        input(type='submit' value='Entrar')[m
\ No newline at end of file[m
[1mdiff --git a/views/signup.jade b/views/signup.jade[m
[1mnew file mode 100644[m
[1mindex 0000000..c9b5860[m
[1m--- /dev/null[m
[1m+++ b/views/signup.jade[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mh1 Signup[m
[32m+[m[32m    a(href="/") Inicio[m
[32m+[m[32m    div= err[m
[32m+[m[32m    form(method='POST' action='/users/signup')[m
[32m+[m[32m        div[m
[32m+[m[32m            input(type='email',placeholder='Ingrese su correo' name='email')[m
[32m+[m[32m        br[m
[32m+[m[32m        div[m
[32m+[m[32m            input(type='password', placeholder='*********' name='password')[m
[32m+[m[32m        br[m
[32m+[m[32m        input(type='submit' value='Registrar')[m
\ No newline at end of file[m
